{"title":"100.+Stack+Array.pdf","contents":["Stack using Array \n#include <stdio.h>\n#include <stdlib.h>\nstruct Stack\n{\n    int size;\n    int top;\n    int *S;\n};\nvoid create(struct Stack *st)\n{\n    printf(\"Enter Size\");\n    scanf(\"%d\",&st->size);\n    st->top=-1;\n    st->S=(int *)malloc(st->size*sizeof(int));\n}\nvoid Display(struct Stack st)\n{\n    int i;\n    for(i=st.top;i>=0;i--)\n        printf(\"%d \",st.S[i]);\n    printf(\"\\n\");\n    \n}\nvoid push(struct Stack *st,int x)\n{\n    if(st->top==st->size-1)\n        printf(\"Stack overflow\\n\");\n    else","{\n    if(st->top==st->size-1)\n        printf(\"Stack overflow\\n\");\n    else\n    {\n        st->top++;\n        st->S[st->top]=x;\n    }","}\nint pop(struct Stack *st)\n{\n    int x=-1;\n    \n    if(st->top==-1)\n        printf(\"Stack Underflow\\n\");\n    else\n    {\n        x=st->S[st->top--];\n    }\n    return x;\n}\nint peek(struct Stack st,int index)\n{\n    int x=-1;\n    if(st.top-index+1<0)\n        printf(\"Invalid Index \\n\");\n    x=st.S[st.top-index+1];\n    \n    return x;\n}\nint isEmpty(struct Stack st)\n{\n    if(st.top==-1)\n        return 1;\n    return 0;\n}\nint isFull(struct Stack st)\n{\n    return st.top==st.size-1;\n}","return 1;\n    return 0;\n}\nint isFull(struct Stack st)\n{\n    return st.top==st.size-1;\n}\nint stackTop(struct Stack st)\n{\n    if(!isEmpty(st))","return st.S[st.top];\n    return -1;\n}\nint main()\n{\n    struct Stack st;\n    create(&st);\n    \n    push(&st,10);\n    push(&st,20);\n    push(&st,30);\n    push(&st,40);\n    \n    printf(\"%d \\n\",peek(st,2));\n    \n    \n    Display(st);\n   \n    return 0;\n}"]}